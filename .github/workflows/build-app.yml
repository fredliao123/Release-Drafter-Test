name: Build App

on:
  push:
    branches:
      - main

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - name: "Delete Old Release Marker Branch"
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{github.token}}
          branches: release-marker
          soft_fail: true
      - name: "Create Release Marker Branch"
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-marker'
      - name: "Generate build number"
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}
      - name: "Checkout project"
        uses: actions/checkout@v2
      - name: "ðŸ§° Set up JDK 1.8"
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: "Build app"
        run: |
          ./gradlew :app:lintDebug --stacktrace
          ./gradlew :app:assembleDebug --stacktrace
        shell: bash
      - name: "Prepare artifacts"
        id: prep-artifacts
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk app-release-build-${{ steps.buildnumber.outputs.build_number }}.apk
          echo "::set-output name=artifact_zip_name::app-artifacts.zip"
          zip app-artifacts.zip app-release-build-${{ steps.buildnumber.outputs.build_number }}.apk
      - name: "Get Draft Release"
        id: get_draft_release
        uses: actions/github-script@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const releases = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const draft = releases.data.find(r => r.draft);
            for (const asset of draft.assets) {
              github.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo:context.repo.repo,
                asset_id: asset.id,
              });
            }
            core.setOutput('upload_url', draft.upload_url);
      - name: "Upload artifact to draft release"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_draft_release.outputs.upload_url }}
          asset_path: ./${{ steps.prep-artifacts.outputs.artifact_zip_name }}
          asset_name: ${{ steps.prep-artifacts.outputs.artifact_zip_name }}
          asset_content_type: application/zip
